name: Integration Doc Generator

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Branch in appsmith-docs to create PR against'
        required: true
        default: 'main'
        type: string

jobs:
  generate_docs:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the docs repo on the target branch
      - name: Checkout appsmith-docs
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          ref: ${{ github.event.inputs.target_branch }}
          fetch-depth: 0

      # 2. Checkout the integration-resources repo
      - name: Checkout integration-resources
        uses: actions/checkout@v4
        with:
          repository: appsmithorg/integration-resources
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          ref: main
          path: integration-resources
          fetch-depth: 1

      # 3. Hardcode the two files to process
      - name: Set files to process manually
        run: |
          echo "intercom_uqi_config.json"   > files_to_process.txt
          echo "sharepoint_uqi_config.json" >> files_to_process.txt
          cat files_to_process.txt

      # 4. Generate docs via OpenAI
      - name: Generate docs with OpenAI
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          mkdir -p website/docs/connect-data/reference

          while IFS= read -r FILE_NAME; do
            echo "⏳ Processing $FILE_NAME"

            # Build and URL-encode the full relative path
            REL="Generic UQI Creation/uqi_configs/${FILE_NAME}"
            ENC=$(echo "$REL" | sed 's/ /%20/g')
            RAW_URL="https://raw.githubusercontent.com/appsmithorg/integration-resources/main/$ENC"
            echo "Fetching $RAW_URL"
            curl -fsSL "$RAW_URL" -o input.json || {
              echo "❌ Failed to fetch $FILE_NAME"
              exit 1
            }

            # Step 1: extract integration details
            SYS1=$(< .github/prompts/extract_prompt.txt)
            USR1=$(< input.json)
            PAY1=$(jq -nc --arg sys "$SYS1" --arg usr "$USR1" \
              '{model:"gpt-4-1106-preview",messages:[{role:"system",content:$sys},{role:"user",content:$usr}],max_tokens:2000,temperature:0}')
            RES1=$(curl -s -H "Authorization: Bearer $OPENAI_API_KEY" \
                        -H "Content-Type: application/json" \
                        -d "$PAY1" \
                        https://api.openai.com/v1/chat/completions)
            EXTRACTED=$(echo "$RES1" | jq -r '.choices[0].message.content')

            # Step 2: generate markdown
            SYS2=$(< .github/prompts/generate_prompt.txt)
            PAY2=$(jq -nc --arg sys "$SYS2" --arg usr "$EXTRACTED" \
              '{model:"gpt-4-1106-preview",messages:[{role:"system",content:$sys},{role:"user",content:$usr}],max_tokens:4000,temperature:0.3}')
            RES2=$(curl -s -H "Authorization: Bearer $OPENAI_API_KEY" \
                        -H "Content-Type: application/json" \
                        -d "$PAY2" \
                        https://api.openai.com/v1/chat/completions)
            MD=$(echo "$RES2" | jq -r '.choices[0].message.content')

            # Save markdown
            NAME=$(basename "$FILE_NAME" "_uqi_config.json" | tr '[:upper:]' '[:lower:]')
            OUT="website/docs/connect-data/reference/${NAME}.md"
            echo "$MD" > "$OUT"
            echo "✅ Wrote $OUT"
          done < files_to_process.txt

      # 5. Commit & open PR
      - name: Commit & Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          title: "docs: update intercom & sharepoint integration docs"
          commit-message: |
            docs: generated intercom and sharepoint docs

            Processed: intercom_uqi_config.json, sharepoint_uqi_config.json
          branch: "docs-update/${{ github.event.inputs.target_branch }}-${{ github.run_id }}"
          base: ${{ github.event.inputs.target_branch }}
          add-paths: |
            website/docs/connect-data/reference/intercom.md
            website/docs/connect-data/reference/sharepoint.md
          body: |
            ✅ Auto-generated documentation for Intercom and SharePoint integrations.
